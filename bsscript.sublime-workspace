{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"str",
				"strlen"
			],
			[
				"ar",
				"argv"
			],
			[
				"de",
				"decrypt"
			],
			[
				"0x1",
				"0x12F"
			],
			[
				"0x12",
				"0x12E"
			],
			[
				"arg",
				"argv"
			],
			[
				"cr",
				"crypto"
			],
			[
				"key",
				"keysize"
			],
			[
				"0x13",
				"0x13C"
			],
			[
				"wi",
				"WIN32"
			],
			[
				"0x",
				"0x13A"
			],
			[
				"exit",
				"exitCode"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/core/main.cpp",
			"settings":
			{
				"buffer_size": 6667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/lib/crypto/sha2/sha2.cpp",
			"settings":
			{
				"buffer_size": 14728,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/lib/crypto/aes/aes.h",
			"settings":
			{
				"buffer_size": 4149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/lib/crypto/aes/aes.cpp",
			"settings":
			{
				"buffer_size": 11642,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/core/help.h",
			"settings":
			{
				"buffer_size": 2310,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/core/errors.h",
			"settings":
			{
				"buffer_size": 3632,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef HEX_H_INCLUDED\n#define HEX_H_INCLUDED\n\nnamespace bssConvert {\n    string char2hex( char dec )\n    {\n        char dig1 = (dec&0xF0)>>4;\n        char dig2 = (dec&0x0F);\n        if ( 0<= dig1 && dig1<= 9) dig1+=48;    //0,48inascii\n        if (10<= dig1 && dig1<=15) dig1+=97-10; //a,97inascii\n        if ( 0<= dig2 && dig2<= 9) dig2+=48;\n        if (10<= dig2 && dig2<=15) dig2+=97-10;\n\n        string r;\n        r.append( &dig1, 1);\n        r.append( &dig2, 1);\n        return r;\n    }\n    string bin2hex(const string& s)\n    {\n        const static char bin2hex_lookup[] = \"0123456789abcdef\";\n        unsigned int t=0,i=0,leng=s.length();\n        string r;\n        r.reserve(leng*2);\n        for(i=0; i<leng; i++)\n        {\n            r+= bin2hex_lookup[ s[i] >> 4 ];\n            r+= bin2hex_lookup[ s[i] & 0x0f ];\n        }\n        return r;\n    }\n}\n\nclass crypt\n{\npublic:\n    \n    \n    string dec2hex(unsigned long long i)\n    {\n        stringstream ss;\n        ss << hex << uppercase << i;\n        //ss << hex << lowercase << i;\n        //ss << showbase << hex << lowercase << i; //prepends 0x\n        //string s; ss >> s; return s; //alternate way to extract string\n        return ss.str();\n    }\n\n    string dec2hex_c(unsigned int i) //has limit of 32 bit integer\n    {\n        char s[20];\n        sprintf(s, \"%X\", i);//uppercase\n        //sprintf(s, \"%x\", i);//lowercase\n        return string(s);\n    }\n    unsigned long long hex2dec(const string &input)\n    {\n        unsigned long long n;\n        stringstream ss;\n        ss << hex << uppercase << input;\n        //ss << hex << lowercase << input;\n        ss >> n;\n        return n;\n    }\n\n    unsigned long long hex2dec_c(const char*s, int length)\n    {\n        unsigned long long n=0;\n        for(int i=0,v=0; i<length && s[i]!='\\0'; i++)\n        {\n            if      ('a' <= s[i] && s[i] <='f')\n            {\n                v=s[i]-97+10;\n            }\n            else if ('A' <= s[i] && s[i] <='F')\n            {\n                v=s[i]-65+10;\n            }\n            else if ('0' <= s[i] && s[i] <='9')\n            {\n                v=s[i]-48;\n            }\n            else break;\n            n*=16;\n            n+=v;\n        }\n        return n;\n    }\n};\n\n#endif // HEX_H_INCLUDED\n",
			"file": "src/lib/convert/hex.h",
			"file_size": 2256,
			"file_write_time": 131053809504685208,
			"settings":
			{
				"buffer_size": 2256,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/lib/convert/types/string/string.cpp",
			"settings":
			{
				"buffer_size": 954,
				"line_ending": "Unix",
				"name": "#include <string>"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ljmf00/git/github/bsscript",
		"/home/ljmf00/git/github/bsscript/src",
		"/home/ljmf00/git/github/bsscript/src/core",
		"/home/ljmf00/git/github/bsscript/src/lib",
		"/home/ljmf00/git/github/bsscript/src/lib/convert",
		"/home/ljmf00/git/github/bsscript/src/lib/convert/types",
		"/home/ljmf00/git/github/bsscript/src/lib/convert/types/binary",
		"/home/ljmf00/git/github/bsscript/src/lib/convert/types/string",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/aes",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/sha2"
	],
	"file_history":
	[
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/md5/md5.h",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/md5/md5.cpp",
		"/home/ljmf00/git/github/bsscript/Makefile",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/aes/aes.cpp",
		"/home/ljmf00/git/github/bsscript/src/lib/convert/types/string/string.h",
		"/home/ljmf00/git/github/bsscript/core/errors.h",
		"/home/ljmf00/git/github/bsscript/core/help.h",
		"/home/ljmf00/git/github/bsscript/src/lib/convert/hex.h",
		"/home/ljmf00/git/github/bsscript/core/main.cpp",
		"/home/ljmf00/git/github/bsscript/src/lib/crypto/aes/aes2.cpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/aes.h",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/AES.cpp",
		"/home/ljmf00/git/github/bsscript/lib/core/help.h",
		"/home/ljmf00/git/github/bsscript/lib/core/errors.h",
		"/home/ljmf00/git/github/bsscript/lib/core/asciiart.h",
		"/home/ljmf00/git/github/bsscript/.travis.yml",
		"/home/ljmf00/git/github/bsscript/lib/core/help.hpp",
		"/home/ljmf00/git/github/bsscript/lib/core/errors.hpp",
		"/home/ljmf00/git/github/bsscript/lib/main.cpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/aes.cpp",
		"/home/ljmf00/git/github/bsscript/lib/core/asciiart.hpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/encrypt.cpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/encrypt.hpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/decrypt.hpp",
		"/home/ljmf00/git/github/bsscript/lib/crypto/aes/decrypt.cpp",
		"/home/ljmf00/git/github/bsscript/lib/win32/colordef.hpp",
		"/home/ljmf00/git/github/bsscript/lib/win32/netsocket/server.hpp",
		"/home/ljmf00/git/github/bsscript/lib/win32/netsocket/client.hpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/ljmf00/git/github/bsscript"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"STDAESCNUM",
			"PP",
			"bin/obj/crypto/aes.o",
			"in",
			"In",
			"in",
			"static_cast",
			"DEFAULT_PORT",
			"DEFAULT_BUFLEN",
			"656"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/core/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6667,
						"regions":
						{
						},
						"selection":
						[
							[
								4598,
								4598
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2460.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/lib/crypto/sha2/sha2.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14728,
						"regions":
						{
						},
						"selection":
						[
							[
								14488,
								14488
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5973.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/lib/crypto/aes/aes.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4149,
						"regions":
						{
						},
						"selection":
						[
							[
								4120,
								4120
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/lib/crypto/aes/aes.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11642,
						"regions":
						{
						},
						"selection":
						[
							[
								662,
								662
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/core/help.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2310,
						"regions":
						{
						},
						"selection":
						[
							[
								1065,
								1065
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 135.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/core/errors.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3632,
						"regions":
						{
						},
						"selection":
						[
							[
								511,
								511
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/lib/convert/hex.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2256,
						"regions":
						{
						},
						"selection":
						[
							[
								2256,
								2256
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/lib/convert/types/string/string.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 954,
						"regions":
						{
						},
						"selection":
						[
							[
								471,
								471
							]
						],
						"settings":
						{
							"auto_name": "#include <string>",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bsscript.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 183.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
